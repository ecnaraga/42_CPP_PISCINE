/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   MutantStack.hpp                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: galambey <galambey@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/03/29 15:39:33 by galambey          #+#    #+#             */
/*   Updated: 2024/03/29 17:55:00 by galambey         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef MUTANTSTACK_HPP
# define MUTANTSTACK_HPP

#include <iostream>
#include <stack>

template <typename T, typename U = std::deque<T> >
class MutantStack : public std::stack<T, U> {
	
	private :

	public :
		
		/* ***************************************************************** */
		/* ******************** Constructor & Destructor ******************* */
		/* ***************************************************************** */
		MutantStack<T, U>() : std::stack<T, U>() {};
		
		MutantStack<T, U>(U const & container) : std::stack< T, U >(container) {
			(void) container;
		};
		
		MutantStack<T, U>(MutantStack<T, U> const & orig) : std::stack<T>(orig) {
			(void) orig;
		};

		~MutantStack<T, U>() {};
		

		/* ***************************************************************** */
		/* ********************** OPERATOR OVERLOADING ********************* */
		/* ***************************************************************** */

		/* ********************** Assignment Operator ********************** */
		
		/* ***************************************************************** */
		/* *************************** EXCEPTIONS ************************** */
		/* ***************************************************************** */

		/* ***************************************************************** */
		/* **************************** Accessor *************************** */
		/* ***************************************************************** */

		/* ***************************************************************** */
		/* ********************** Overloaded Functions ********************* */
		/* ***************************************************************** */

		/* ***************************************************************** */
		/* ***************************** Other ***************************** */
		/* ***************************************************************** */

		/* ***************************************************************** */
		/* *************************** Conversion ************************** */
		/* ***************************************************************** */

		/* ***************************************************************** */
		/* **************************** Actions **************************** */
		/* ***************************************************************** */

		
	
};

#endif